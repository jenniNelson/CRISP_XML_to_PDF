<?xml version="1.0" encoding="UTF-8"?>

<crisp-grammar>

  <!-- ~~~~~~~ -->
  <!-- GRAMMAR -->
  <!-- ~~~~~~~ -->

  <tree id="i.propername">
    <node cat="NP" index="r" sem="self">
      <leaf cat="PN" type="anchor" sem="self"/>
    </node>
  </tree>

  <!-- chop, likes -->
  <tree id="i.nx0Vnx1">
    <node cat="S" index="r" sem="self">
      <leaf cat="NP" type="substitution" index="0" sem="subj" />
      <node cat="VP" sem="self">
        <leaf cat="V" type="anchor" sem="self"/>
        <leaf cat="NP" type="substitution" index="1" sem="obj" />
      </node>
    </node>
  </tree>

  <!-- I think correct tree to use for "with". -->
  <tree id="a.betavxPnx">
    <node cat="VP" index="r" sem="self">
      <leaf cat="VP" type="foot" sem="subj" />
      <node cat="PP" sem="self">
        <leaf cat="P" type="anchor" sem="self"/>
        <leaf cat="NP" type="substitution"  sem="obj" />
      </node>
    </node>
  </tree>

  <tree id="i.N">
    <leaf cat="N" type="anchor" sem="self" />
  </tree>

  <tree id="a.An">
    <node cat="N" index="r" sem="self">
      <leaf cat="A" type="anchor" sem="self"/>
      <leaf cat="N" type="foot" index="f" sem="self" />
    </node>
  </tree>

  <tree id="i.nx0Vnx1Pnx2">
    <node cat="S" index="r" sem="self">
      <leaf cat="NP" type="substitution" index="0" sem="subj"/>
      <node cat="VP" sem="self">
        <leaf cat="V" type="anchor" sem="self"/>
        <leaf cat="NP" type="substitution" index="1" sem="obj"/>
        <node cat="VP" index="e" sem="self">
          <node cat="V" index="e" sem="self">
            <leaf cat="" type="terminal" index="v" sem="self"/>
          </node>
          <node cat="PP" sem="ppobj">
            <leaf cat="P" type="lex" sem="ppobj"/>
            <leaf cat="NP" type="substitution" index="2" sem="ppobj"/>
          </node>
        </node>
      </node>
    </node>
  </tree>

  <tree id="i.Dn">   <!-- non-XTAG -->
    <node cat="NP" index="r" sem="self">
      <leaf cat="D" type="anchor" sem="self" />
      <node type="substitution" cat="N" index="0" sem="self" />
    </node>
  </tree>




  <!-- ~~~~~~~ -->
  <!-- LEXICON -->
  <!-- ~~~~~~~ -->

  <entry word='' pos=''>
    <tree refid="">
      <semcontent></semcontent>
      <semreq></semreq>
    </tree>
  </entry>

  <entry word='at' pos=''>
    <tree refid="">
      <semcontent></semcontent>
      <semreq></semreq>
    </tree>
  </entry>

  <entry word='with' pos='P'>
      <tree refid="a.betavxPnx">
        <semcontent>action_with(obj)</semcontent>
        <!-- <semcontent>action_with(subj, obj)</semcontent> FOR if multiple actions?-->
        <!-- <semreq>denotes_action(subj)</semreq> -->
      </tree>
    </entry>

    <entry word='chop' pos='V'>
      <tree refid="i.nx0Vnx1">
        <semcontent>action_is(chop-thing)</semcontent>
        <semcontent>action_by(subj)</semcontent>
        <semcontent>action_towards(obj)</semcontent>
        <!-- <semcontent>action_with(?)</semcontent> -->
        <semcontent>denotes_action(self)</semcontent>
        <semreq>cabinet(obj)</semreq>
        <!-- <semreq>has(subj axe)</semreq>  NOT SURE HOW TO SPECIFY the need for owning an axe -->
        <semreq>character(subj)</semreq>
        <semreq>cabinet(obj)</semreq>
        <semreq>alive(subj)</semreq>
      </tree>
    </entry>

  <entry word='chop' pos='V'>
    <tree refid="i.nx0Vnx1">
      <semcontent>action_is(chop-zombie)</semcontent>
      <semcontent>action_by(subj)</semcontent>
      <semcontent>action_towards(obj)</semcontent>
      <!-- <semcontent>action_with(?)</semcontent> -->
      <semcontent>denotes_action(self)</semcontent>
      <semreq>zombie(obj)</semreq>
      <!-- <semreq>has(subj axe)</semreq>  NOT SURE HOW TO SPECIFY the need for owning an axe -->
      <semreq>character(subj)</semreq>
      <semreq>alive(subj)</semreq>
    </tree>
  </entry>


  <entry word='Mary' pos='PN'>
    <tree refid='i.propername'>
      <semcontent>name(self,mary)</semcontent>
    </tree>
  </entry>


  <entry word='likes' pos='V'>
    <tree refid="i.nx0Vnx1">
      <semcontent>like(self,subj,obj)</semcontent>
      <semreq>animate(subj)</semreq>
    </tree>
  </entry>

  <entry word='takes' pos='V'>
    <tree refid="i.nx0Vnx1Pnx2">
      <lex pos="P" word="from" />
      <semcontent>takefrom(self,subj,obj,ppobj)</semcontent>
      <semreq>animate(subj)</semreq>
      <semreq>in(obj,ppobj)</semreq>
    </tree>
  </entry>


  <entry word='rabbit' pos='N'>
    <tree refid="i.N">
      <semcontent>rabbit(self)</semcontent>
    </tree>
  </entry>

  <entry word='the' pos='D'>
    <tree refid="i.Dn">
    </tree>
  </entry>

  <entry word='a' pos='D'>
    <tree refid="i.Dn">
      <pragcondition>discoursenew(self)</pragcondition>
      <prageffect>uniqueref(self)</prageffect>
    </tree>
  </entry>

  <entry word='white' pos='A'>
    <tree refid='a.An'>
      <semcontent>white(self)</semcontent>
    </tree>
  </entry>

  <entry word='foo1' pos='A'>
    <tree refid='a.An'>
      <semcontent>foo1(self)</semcontent>
    </tree>
  </entry>

  <entry word='foo2' pos='A'>
    <tree refid='a.An'>
      <semcontent>foo2(self)</semcontent>
    </tree>
  </entry>

  <entry word='foo3' pos='A'>
    <tree refid='a.An'>
      <semcontent>foo3(self)</semcontent>
    </tree>
  </entry>

  <entry word='foo4' pos='A'>
    <tree refid='a.An'>
      <semcontent>foo4(self)</semcontent>
    </tree>
  </entry>

  <entry word='foo5' pos='A'>
    <tree refid='a.An'>
      <semcontent>foo5(self)</semcontent>
    </tree>
  </entry>
</crisp-grammar>
